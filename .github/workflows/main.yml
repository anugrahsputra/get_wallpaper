on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master

name: "Build and Deploy"
jobs:
  build:
    name: "Build and Deploy"
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '12.x'
          cache: 'gradle'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.0"
          channel: 'stable'
          cache: true

      - name: Run Pub Get
        run: flutter pub get

      - name: Generate model and cubit
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Run Tests
        run: flutter test

      - name: Build APK
        run: flutter build apk --release

      - name: Decode keystore
        env:
          KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
        run: echo "$KEYSTORE_FILE" | base64 --decode > keystore.jks

      - name: Sign APK
        run: |
          jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
            -keystore keystore.jks \
            -storepass ${{ secrets.KEYSTORE_PASSWORD }} \
            -keypass ${{ secrets.KEY_PASSWORD }} \
            build/app/outputs/flutter-apk/app-release-unsigned.apk \
            ${{ secrets.KEY_ALIAS }}
          jarsigner -verify build/app/outputs/flutter-apk/app-release-unsigned.apk

      - name: Zipalign APK
        run: |
          $ANDROID_HOME/build-tools/30.0.3/zipalign -v 4 build/app/outputs/flutter-apk/app-release-unsigned.apk build/app/outputs/flutter-apk/app-release.apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive



          
  
