# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.0"
          channel: 'stable'
          cache: true
          
      - name: Get dependencies
        run: flutter pub get

      - name: Generate model and cubit
        run: dart run build_runner build --delete-conflicting-outputs

      # Recreate env.dart
      - name: Create env.dat
        run: |
            echo "class Env {" > lib/utils/env.dart
            echo "  static const String baseUrl = '${{ secrets.BASE_URL }}';" >> lib/utils/env.dart
            echo "  static const String apiKey = '${{ secrets.API_KEY }}';" >> lib/utils/env.dart
            echo "  static const String curatedWallpaper = '${{ secrets.CURATED_WALLPAPER }}';" >> lib/utils/env.dart
            echo "  static const String detailWallpaper = '${{ secrets.DETAIL_WALLPAPER }}';" >> lib/utils/env.dart
            echo "  static const String searchWallpaper = '${{ secrets.SEARCH_WALLPAPER }}';" >> lib/utils/env.dart
            echo "}" >> lib/utils/env.dart
      
      # Build an APK
      - name: Build APK
        run: flutter build apk --release

      # Create a release and upload an asset with it
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./build/app/outputs/flutter-apk/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      # - name: Run tests
      #   run: dart test
